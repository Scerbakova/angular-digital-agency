{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ba21efa5abccc708fff166f14f2b620c3a597f3b1ebf1d10ca4f154deacf94f72c3293108be795040ea8e1680eae643e2d159ed3fc3521025fb7441205dbc419",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-digital-agency'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-digital-agency';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\n  overflow: hidden;\n  position: relative;\n}\n\n.content__wrapper {\n  margin: 40px 120px;\n}\n\n.spot {\n  position: absolute;\n  top: 0%;\n  z-index: -1;\n}\n\n.light__spot--brown {\n  right: 0%;\n}\n\n@media screen and (max-width: 1010px) {\n  .content__wrapper {\n    margin: 40px;\n  }\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container\">\n  <div class=\"content__wrapper\">\n    <app-header class=\"header\"></app-header>\n    <app-platform-section></app-platform-section>\n    <app-why-choose-envor-section></app-why-choose-envor-section>\n  </div>\n  <div class=\"light__spots\">\n    <img class=\"spot light__spot\" src=\"../assets/images/spot.png\" />\n    <img class=\"spot light__spot--brown\" src=\"../assets/images/spot-brown.png\" />\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86197952053b03f6313b4dda565615af3e890ebedf3254b4f1d65af6d81f4c690c5174b0bfcb234d8f8b243866ec4107fcd9b91329702125b10ac4de4f212356",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n\n  @Input()\n  primary = false;\n\n  @Input()\n  label = 'Button';\n\n  // @Input()\n  // type = 'round';\n\n  public get classes(): string[] {\n\n    const mode = this.primary ? 'button--primary' : 'button--secondary';\n\n    return ['button', 'button--', mode];\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n  font-size: 16px;\n  line-height: 22px;\n  text-align: center;\n  letter-spacing: -0.500211px;\n  color: #ffffff;\n  border-radius: 4px;\n  padding: 10px 40px;\n}\n\n.button--primary {\n  font-size: 20px;\n  border: 1px solid #5454D4;\n  background-color:  #5454D4;\n  display: flex;\n  align-items: center;\n}\n\n.button--secondary {\n  border: 1px solid #ffffff;\n  background-color: transparent;\n}\n\n.button--big_play {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n\n@media screen and (max-width: 1011px) {\n  .button {\n    padding: 10px 20px;\n  }\n}\n\n@media screen and (max-width: 775px) {\n  .button {\n    padding: 10px 20px;\n  }\n}\n\n@media screen and (max-width: 375px) {\n  .button {\n    margin-bottom: 50px;\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 19
                    }
                }
            },
            "templateData": "<button [ngClass]=\"classes\">\n  {{ label }}\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-14174bb6d4d6285b656190c14da1d36f48ca60de65aec2781e8380f9e478548c1a9f72fececf70d81b8122ff56d7ee348dd1465bb0c3186a8d374705e9fcc7a2",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "burger",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "innerWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "wideScreen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ]
                },
                {
                    "name": "onShowMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  \n  @Input()\n  burger = false;\n\n  wideScreen = true;\n\n  showMenu = false;\n\n  innerWidth: number | undefined;\n\n  @HostListener('window:resize')\n    \n  onResize() {\n    this.innerWidth = window.innerWidth;\n\n    if (this.innerWidth > 775) {\n      this.wideScreen = true\n      this.burger = false\n    }\n    else {\n      this.wideScreen = false\n      this.burger = true\n    }\n  }\n\n  onShowMenu() {\n    this.showMenu = !this.showMenu\n  }\n\n  public get headerClass(): string[] {\n    const mode = this.burger ? 'header--burger' : 'header'\n\n    return ['header', mode]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "headerClass": {
                    "name": "headerClass",
                    "getSignature": {
                        "name": "headerClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 38
                    }
                }
            },
            "templateData": "<header *ngIf=\"wideScreen; else smallScreen\" [ngClass]=\"headerClass\">\n  <app-logo></app-logo>\n  <app-navigation></app-navigation>\n  <app-button *ngIf=\"wideScreen\" label=\"Contact us\"></app-button>\n</header>\n<ng-template #smallScreen>\n  <header [ngClass]=\"headerClass\">\n    <app-logo></app-logo>\n    <app-navigation [burger]=\"true\" *ngIf=\"showMenu === true\"></app-navigation>\n    <div (click)=\"onShowMenu()\">\n      <img *ngIf=\"!showMenu; else showClose\" src=\"../../../assets/images/burger.svg\" alt=\"menu\">\n      <ng-template #showClose>&#10006;</ng-template>\n    </div>\n  </header>\n</ng-template>\n\n"
        },
        {
            "name": "LinkComponent",
            "id": "component-LinkComponent-31f856c4c10246d0fedc677f6ef0ae6b7a18695057455f6b78075e9b45eec23bd41aa422786f364b9463e944d6f3987427a2122a4380fa39381bedd65e63ea5c",
            "file": "src/app/components/link/link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-link",
            "styleUrls": [
                "./link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss']\n})\nexport class LinkComponent {\n\n  @Input()\n  label = 'Home';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navbar__link {\n  font-size: 18px;\n  line-height: 25px;\n  color: rgba(255, 255, 255, 0.7);\n}\n// .navbar__link-active {\n//   color: #5454D4;\n// }\n.navbar__link:active {\n  color: #5454D4;\n}",
                    "styleUrl": "./link.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<li><a class=\"navbar__link\">{{ label }}</a></li>\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-3d7db0d7d97fad572eadbd6b8126fa4ce4e45cd5fb6d6246924f434b55d9b098f8597b1ccb7700117e537b7c08cc3265f7f5e072fe0a01f20ae951fe4e8211dc",
            "file": "src/app/components/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "image",
                    "defaultValue": "'../../../assets/images/Logo Icon 1.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Envor'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent {\n  @Input()\n  label = 'Envor';\n\n  @Input()\n  image = '../../../assets/images/Logo Icon 1.svg';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".logo__container {\n  display: flex;\n  flex-direction: row;\n}\n\n.logo__text {\n  font-family: \"Montserrat\", sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 140%;\n  color: #ffffff;\n  position: absolute;\n  margin-left: 48px;\n}\n",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"logo__container\">\n  <img class=\"logo__svg\" [src]=\"image\" alt=\"logo\">\n  <p class=\"logo__text\">{{label}}</p>\n</div>"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-0af8d42ee160467f74ae5de87f0babbc6f6a1309bc90d684cfe8ac9cecaac5f24df9214b93def47639f965552c070235545ced0631c5c62b0291f3d43c5d92a7",
            "file": "src/app/components/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation",
            "styleUrls": [
                "./navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "burger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  @Input()\n  burger: boolean | undefined\n  \n  get ulClass(): string[] {\n    const mode = this.burger ? 'navigation__list--burger' : 'navigation__list'\n\n    return ['navigation__list', mode]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".navigation__list {\n  display: flex;\n  column-gap: 40px;\n}\n.navigation__list--burger {\n  position: absolute;\n  top: 5%;\n  right: 5%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}",
                    "styleUrl": "./navigation.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "ulClass": {
                    "name": "ulClass",
                    "getSignature": {
                        "name": "ulClass",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<ul [ngClass]=\"ulClass\">\n  <app-link label=\"Home\"></app-link>\n  <app-link label=\"Services\"></app-link>\n  <app-link label=\"Our Project\"></app-link>\n  <app-link label=\"About us\"></app-link>\n</ul>"
        },
        {
            "name": "PlatformSectionComponent",
            "id": "component-PlatformSectionComponent-fb9abf8de7e5b55156067d68c96e2b144a0211adae9971ea63d4076eae755d9b22dfd5ffac16c7a2a5a1bd04fde098b523bc62b84fefe4b011b1eb6aebf341bb",
            "file": "src/app/components/platform-section/platform-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-platform-section",
            "styleUrls": [
                "./platform-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./platform-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonServices",
                    "defaultValue": "buttonServices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "innerWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "screen",
                    "defaultValue": "'wideScreen'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"wideScreen\" | \"mediumScreen\" | \"smallScreen\"",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "textPlatform",
                    "defaultValue": "textPlatform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "titlePlatform",
                    "defaultValue": "titlePlatform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener } from '@angular/core';\nimport { buttonServices } from 'src/app/labels/buttonLabels';\nimport { textPlatform } from 'src/app/labels/textLabels';\nimport { titlePlatform } from 'src/app/labels/titleLabels';\n\n@Component({\n  selector: 'app-platform-section',\n  templateUrl: './platform-section.component.html',\n  styleUrls: ['./platform-section.component.scss'],\n})\nexport class PlatformSectionComponent {\n  titlePlatform = titlePlatform;\n  textPlatform = textPlatform;\n  buttonServices = buttonServices;\n\n  screen: 'wideScreen' | 'mediumScreen' | 'smallScreen' = 'wideScreen';\n\n  innerWidth: number | undefined;\n\n  @HostListener('window:resize')\n  onResize() {\n    this.innerWidth = window.innerWidth;\n\n    if (this.innerWidth > 875) {\n      this.screen = 'wideScreen';\n    } else if (this.innerWidth > 775 && this.innerWidth < 875) {\n      this.screen = 'mediumScreen';\n    } else {\n      this.screen = 'smallScreen';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".platform__wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 100%;\n}\n\n.platform__text {\n  padding-right: 90px;\n}\n\n.title__wrapper {\n  margin-bottom: 24px;\n}\n\n.text__wrapper {\n  margin-bottom: 50px;\n}\n\n.button__arrow {\n  margin-left: 10px;\n}\n\n.picture__wrapper {\n  position: relative;\n}\n\n.human__picture {\n  margin-right: -80px;\n}\n\n.picture__rectangle {\n  position: absolute;\n  width: 375.34px;\n  height: 375.34px;\n  left: 110px;\n  top: 210px;\n  \n  border: 2px solid #FFFFFF;\n  border-radius: 22.179px;\n  transform: rotate(23.64deg);\n  z-index: -1;\n}\n\n.picture {\n  position: absolute;\n}\n\n.zigzag__picture {\n  left: -70px;\n  top: 120px;\n}\n\n.play__picture {\n  left: -110px;\n  top: 560px;\n}\n\n.add__picture {\n  left: 520px;\n  top: 610px;\n}\n\n.circles__picture {\n  left: 500px;\n  top: 80px;\n}\n\n@media screen and (max-width: 1195px) {\n  .human__picture {\n    max-width: 600px;\n  }\n  .picture__rectangle {\n    max-width: 370px;\n    max-height: 370px;\n    left: 100px;\n    top: 200px;\n  }\n  .add__picture {\n    left: 480px;\n    top: 610px;\n  }\n  .circles__picture {\n    left: 460px;\n    top: 80px;\n  }\n}\n\n@media screen and (max-width: 1145px) {\n  .human__picture {\n    max-width: 500px;\n  }\n  .picture__rectangle {\n    max-width: 290px;\n    max-height: 290px;\n    left: 85px;\n    top: 160px;\n  }\n  .add__picture {\n    left: 400px;\n    top: 450px;\n  }\n  .circles__picture {\n    left: 400px;\n    top: 80px;\n  }\n  .play__picture {\n    left: -110px;\n    top: 490px;\n  }\n}\n\n@media screen and (max-width: 1055px) {\n  .human__picture {\n    max-width: 400px;\n  }\n  .picture__rectangle {\n    max-width: 235px;\n    max-height: 235px;\n    left: 65px;\n    top: 125px;\n  }\n  .add__picture {\n    left: 290px;\n    top: 350px;\n  }\n  .circles__picture {\n    left: 290px;\n    top: 30px;\n  }\n  .play__picture {\n    left: -70px;\n    top: 370px;\n  }\n}\n\n@media screen and (max-width: 810px) {\n  .human__picture {\n    max-width: 380px;\n  }\n  .picture__rectangle {\n    max-width: 220px;\n    max-height: 220px;\n    left: 60px;\n    top: 120px;\n  }\n  .zigzag__picture {\n    left: 10px;\n    top: 50px;\n    max-width: 60px;\n  }\n  .add__picture {\n    left: 286px;\n    top: 350px;\n    max-width: 40px;\n  }\n  .circles__picture {\n    left: 265px;\n    top: 30px;\n    max-width: 40px;\n  }\n  .play__picture {\n    left: 20px;\n    top: 360px;\n    max-width: 60px;\n  }\n}\n\n@media screen and (max-width: 775px) {\n  .platform__wrapper {\n    flex-direction: column;\n    margin-top: 66px;\n  }\n  .platform__text {\n    padding: 0;\n  }\n}\n\n@media screen and (max-width: 600px) {\n  .platform__wrapper {\n    flex-direction: column;\n  }\n}\n\n@media screen and (max-width: 375px) {\n  .human__picture {\n    margin-left: -50px;\n  }\n  .picture__rectangle {\n    max-width: 220px;\n    max-height: 220px;\n    left: 10px;\n    top: 120px;\n  }\n  .zigzag__picture {\n    left: -30px;\n    top: 50px;\n    max-width: 60px;\n  }\n  .add__picture {\n    left: 240px;\n    top: 350px;\n    max-width: 40px;\n  }\n  .circles__picture {\n    left: 225px;\n    top: 30px;\n    max-width: 40px;\n  }\n  .play__picture {\n    left: -30px;\n    top: 360px;\n    max-width: 60px;\n  }\n}\n",
                    "styleUrl": "./platform-section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section>\n  <div class=\"platform__wrapper\">\n    <div class=\"platform__text\">\n      <div class=\"title__wrapper\" [ngSwitch]=\"screen\">\n        <app-title\n          *ngSwitchCase=\"'mediumScreen'\"\n          size=\"medium\"\n          [label]=\"titlePlatform\"\n        ></app-title>\n        <app-title\n          *ngSwitchCase=\"'smallScreen'\"\n          size=\"small\"\n          [label]=\"titlePlatform\"\n        ></app-title>\n        <app-title\n          *ngSwitchDefault\n          size=\"large\"\n          [label]=\"titlePlatform\"\n        ></app-title>\n      </div>\n      <div class=\"text__wrapper\">\n        <app-text\n          *ngIf=\"screen === 'wideScreen'; else smallText\"\n          size=\"large\"\n          [label]=\"textPlatform\"\n        ></app-text>\n        <ng-template #smallText>\n          <app-text size=\"small\" [label]=\"textPlatform\"></app-text>\n        </ng-template>\n      </div>\n      <app-button [primary]=\"true\" [label]=\"buttonServices.title\"\n        ><img class=\"button__arrow\" [src]=\"buttonServices.image\"\n      /></app-button>\n    </div>\n    <div class=\"platform__picture\">\n      <div class=\"picture__wrapper\">\n        <img\n          class=\"human__picture\"\n          src=\"../../../assets/images/human.png\"\n          alt=\"human\"\n        />\n        <div class=\"picture__rectangle\"></div>\n        <img\n          class=\"picture add__picture\"\n          src=\"../../../assets/images/add.png\"\n          alt=\"add\"\n        />\n        <img\n          class=\"picture circles__picture\"\n          src=\"../../../assets/images/circles.png\"\n          alt=\"circles\"\n        />\n        <img\n          class=\"picture play__picture\"\n          src=\"../../../assets/images/play.png\"\n          alt=\"play\"\n        />\n        <img\n          class=\"picture zigzag__picture\"\n          src=\"../../../assets/images/zigzag.png\"\n          alt=\"zigzag\"\n        />\n      </div>\n    </div>\n  </div>\n</section>\n\n"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-4d17e86b813aee6eeca43ebb87a0ab2c2bc633cfc419657a9f515a459971320fce979b9e416e18bf71b2b1b41272cdd7dbf5d5ead60f8be0c97568b02abf02bb",
            "file": "src/app/components/text/text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"large\" | \"small\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss']\n})\nexport class TextComponent {\n\n  @Input()\n  label = 'Text';\n\n  @Input()\n  size: 'large' | 'small' = 'large';\n\n  public get textClasses(): string[] {\n    if (this.size === 'large') {\n      ('text--large');\n    } else {\n      ('text--small');\n    }\n    return ['text', `text--${this.size}`];\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".text--large {\n  font-size: 21px;\n  line-height: 39px;\n}\n\n.text--small {\n  font-size: 16px;\n  line-height: 24px;\n}\n",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "textClasses": {
                    "name": "textClasses",
                    "getSignature": {
                        "name": "textClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<p [ngClass]=\"textClasses\">{{label}}</p>\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-30471b49379bd98a9f110264f16c81fef2141ee6829bf0bc375aa360b79a932136d89fa33612b5f3d5c68bdb748ba1206cfc97fee7365b4377a910c887ab1dd2",
            "file": "src/app/components/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-title",
            "styleUrls": [
                "./title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"large\" | \"medium\" | \"small\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent {\n  @Input()\n  label = 'Title';\n\n  @Input()\n  size: 'large' | 'medium' | 'small' = 'large';\n\n  public get titleClasses(): string[] {\n    if (this.size === 'large') {\n      ('title--large');\n    } else if (this.size === 'medium') {\n      ('title--medium');\n    } else {\n      ('title--small');\n    }\n    return ['title', `title--${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title {\n  font-family: \"Graphik\", sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  color: #ffffff;\n}\n.title--large {\n  font-size: 80px;\n  line-height: 84px;\n}\n.title--medium {\n  font-size: 60px;\n  line-height: 70px;\n}\n.title--small {\n  font-size: 42px;\n  line-height: 63px;\n}\n",
                    "styleUrl": "./title.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "titleClasses": {
                    "name": "titleClasses",
                    "getSignature": {
                        "name": "titleClasses",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<p [ngClass]=\"titleClasses\">{{label}}</p>\n"
        },
        {
            "name": "WhyChooseEnvorSectionComponent",
            "id": "component-WhyChooseEnvorSectionComponent-208138238ff95125757c1cd8c356a9ff03f6d89517b688df220e2428aba8c05c276602b33f565f9d4d5ebbfdb542dc7d27c968f58d3508900eed0382f69c6386",
            "file": "src/app/components/why-choose-envor-section/why-choose-envor-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-why-choose-envor-section",
            "styleUrls": [
                "./why-choose-envor-section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./why-choose-envor-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonBigPlay",
                    "defaultValue": "buttonBigPlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "innerWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isPlaying",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pause",
                    "defaultValue": "faPauseCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "play",
                    "defaultValue": "faPlayCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "playStopVideo",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "screen",
                    "defaultValue": "'wideScreen'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"wideScreen\" | \"mediumScreen\" | \"smallScreen\"",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "solidPlay",
                    "defaultValue": "faPlay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "textWhyChooseEnver",
                    "defaultValue": "textWhyChooseEnver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "titleWhyChoseEnver",
                    "defaultValue": "titleWhyChoseEnver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component,  HostListener } from '@angular/core';\nimport { faPauseCircle, faPlay, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport { buttonBigPlay } from 'src/app/labels/buttonLabels';\nimport { textWhyChooseEnver } from 'src/app/labels/textLabels';\nimport { titleWhyChoseEnver } from 'src/app/labels/titleLabels';\n\n\n@Component({\n  selector: 'app-why-choose-envor-section',\n  templateUrl: './why-choose-envor-section.component.html',\n  styleUrls: ['./why-choose-envor-section.component.scss'],\n})\nexport class WhyChooseEnvorSectionComponent {\n  titleWhyChoseEnver = titleWhyChoseEnver;\n  textWhyChooseEnver = textWhyChooseEnver;\n  // buttonServices = buttonServices;\n  buttonBigPlay = buttonBigPlay;\n  play = faPlayCircle;\n  pause = faPauseCircle\n  solidPlay = faPlay;\n  isPlaying = false;\n\n  screen: 'wideScreen' | 'mediumScreen' | 'smallScreen' = 'wideScreen';\n\n  innerWidth: number | undefined;\n\n  @HostListener('window:resize')\n  onResize() {\n    this.innerWidth = window.innerWidth;\n\n    if (this.innerWidth > 875) {\n      this.screen = 'wideScreen';\n    } else if (this.innerWidth > 775 && this.innerWidth < 875) {\n      this.screen = 'mediumScreen';\n    } else {\n      this.screen = 'smallScreen';\n    }\n  }\n\n  playStopVideo = () => {\n    this.isPlaying = !this.isPlaying;\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".best--choice__wrapper {\n  margin-top: 150px;\n}\n\n.best--choice__text {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.best--choice__video {\n  margin-top: 50px;\n  position: relative;\n  overflow: hidden;\n}\n\n.best--choice__video:hover .controls {\n  transform: translateY(0);\n}\n\n.video {\n  width: 100%;\n  margin-bottom: -13px;\n}\n\n.play__button {\n  width: 124px;\n  height: 124px;\n  position: absolute;\n  top: 50%;\n  right: 50%;\n  transform: translate(50%, -50%);\n  background-color: rgb(84, 84, 212);\n  border: none;\n  border-radius: 50%;\n  z-index: 1;\n}\n\n.play__button:hover {\n  background-color: rgba(84, 84, 212, 0.596);\n}\n\n.play {\n  color: white;\n}\n\n.controls {\n  display: flex;\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  flex-wrap: wrap;\n  background-color: rgba(0, 0, 0, 0.774);\n  transform: translateY(100%);\n  transition: all 0.9s;\n}\n\n.play-pause__button {\n  background: none;\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  color: white;\n}\n\n@media screen and (max-width: 375px) {\n  .best--choice__wrapper {\n    margin-top: 140px;\n  }\n\n  .best--choice__text {\n    display: flex;\n    flex-direction: column;\n    row-gap: 30px;\n  }\n}\n",
                    "styleUrl": "./why-choose-envor-section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section>\n  <div class=\"best--choice__wrapper\">\n    <div class=\"best--choice__text\">\n      <div class=\"title__wrapper\" [ngSwitch]=\"screen\">\n        <app-title\n          *ngSwitchCase=\"'mediumScreen'\"\n          size=\"medium\"\n          [label]=\"titleWhyChoseEnver\"\n        ></app-title>\n        <app-title\n          *ngSwitchCase=\"'smallScreen'\"\n          size=\"small\"\n          [label]=\"titleWhyChoseEnver\"\n        ></app-title>\n        <app-title\n          *ngSwitchDefault\n          size=\"medium\"\n          [label]=\"titleWhyChoseEnver\"\n        ></app-title>\n      </div>\n      <div class=\"text__wrapper\">\n        <app-text\n          *ngIf=\"screen === 'wideScreen'; else smallText\"\n          size=\"large\"\n          [label]=\"textWhyChooseEnver\"\n        ></app-text>\n        <ng-template #smallText>\n          <app-text size=\"small\" [label]=\"textWhyChooseEnver\"></app-text>\n        </ng-template>\n      </div>\n    </div>\n    <div class=\"best--choice__video\">\n      <app-button [primary]=\"true\" [label]=\"buttonBigPlay.title\"\n      ><img class=\"button__arrow\" [src]=\"buttonBigPlay.image\"\n    /></app-button>\n      <button *ngIf=\"!isPlaying\" (click)=\"playStopVideo(); player.play()\" class=\"play__button\">\n        <fa-icon class=\"play\" [icon]=\"solidPlay\"></fa-icon>\n      </button>\n      <video #player class=\"video\" src=\"../../../assets/video/video.mp4\"></video>\n      <div class=\"controls\">\n        <div class=\"buttons\">\n          <button *ngIf=\"!isPlaying\" (click)=\"playStopVideo(); player.play()\" class=\"play-pause__button\">\n            <fa-icon [icon]=\"play\"></fa-icon>\n          </button>\n            <button *ngIf=\"isPlaying\" (click)=\"playStopVideo(); player.pause()\" class=\"play-pause__button\">\n              <fa-icon [icon]=\"pause\"></fa-icon>\n            </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-aff4100795fd16bedc689861bd8ec3002c3d5850d187b201de02223995005d400742b24330349f17b468d4b84c3b5aa324f7a2dfbf0779ffb98972f7a1e03a63",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { LinkComponent } from './components/link/link.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { LogoComponent } from './components/logo/logo.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { TextComponent } from './components/text/text.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { PlatformSectionComponent } from './components/platform-section/platform-section.component';\nimport { WhyChooseEnvorSectionComponent } from './components/why-choose-envor-section/why-choose-envor-section.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    LinkComponent,\n    NavigationComponent,\n    LogoComponent,\n    TitleComponent,\n    TextComponent,\n    HeaderComponent,\n    PlatformSectionComponent,\n    WhyChooseEnvorSectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LinkComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "NavigationComponent"
                        },
                        {
                            "name": "PlatformSectionComponent"
                        },
                        {
                            "name": "TextComponent"
                        },
                        {
                            "name": "TitleComponent"
                        },
                        {
                            "name": "WhyChooseEnvorSectionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "buttonBigPlay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/buttonLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  title: '',\n  image: '../../../assets/images/button-play.png'\n}"
            },
            {
                "name": "buttonServices",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/buttonLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  title: 'Our Services',\n  image: '../../../assets/images/arrow-right-up.png'\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Logo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Navigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation/navigation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NavigationLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LogoComponent>",
                "defaultValue": "(args: LogoComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/link/link.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LinkComponent>",
                "defaultValue": "(args: LinkComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/navigation/navigation.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavigationComponent>",
                "defaultValue": "(args: NavigationComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/text/text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextComponent>",
                "defaultValue": "(args: TextComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/title/title.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TitleComponent>",
                "defaultValue": "(args: TitleComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "textPlatform",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/textLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Enver studio is a digital studio that offers several services such as UI/UX Design to developers, we will provide the best service for those of you who use our services.'"
            },
            {
                "name": "textWhyChooseEnver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/textLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Watch this one minute video so you understand why you should use our services!'"
            },
            {
                "name": "titlePlatform",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/titleLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Build Your Awesome Platform'"
            },
            {
                "name": "titleWhyChoseEnver",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/labels/titleLabels.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Why Enver Is The Best Choice?'"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/labels/buttonLabels.ts": [
                {
                    "name": "buttonBigPlay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/buttonLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  title: '',\n  image: '../../../assets/images/button-play.png'\n}"
                },
                {
                    "name": "buttonServices",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/buttonLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  title: 'Our Services',\n  image: '../../../assets/images/arrow-right-up.png'\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/components/header/header.stories.ts": [
                {
                    "name": "Header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/text/text.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/text/text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextComponent>",
                    "defaultValue": "(args: TextComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/title/title.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/title/title.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TitleComponent>",
                    "defaultValue": "(args: TitleComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/logo/logo.stories.ts": [
                {
                    "name": "Logo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LogoComponent>",
                    "defaultValue": "(args: LogoComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/navigation/navigation.stories.ts": [
                {
                    "name": "Navigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation/navigation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/navigation/navigation.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavigationComponent>",
                    "defaultValue": "(args: NavigationComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/link/link.stories.ts": [
                {
                    "name": "NavigationLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/link/link.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LinkComponent>",
                    "defaultValue": "(args: LinkComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args,\n})"
                }
            ],
            "src/app/labels/textLabels.ts": [
                {
                    "name": "textPlatform",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/textLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Enver studio is a digital studio that offers several services such as UI/UX Design to developers, we will provide the best service for those of you who use our services.'"
                },
                {
                    "name": "textWhyChooseEnver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/textLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Watch this one minute video so you understand why you should use our services!'"
                }
            ],
            "src/app/labels/titleLabels.ts": [
                {
                    "name": "titlePlatform",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/titleLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Build Your Awesome Platform'"
                },
                {
                    "name": "titleWhyChoseEnver",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/labels/titleLabels.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Why Enver Is The Best Choice?'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/link/link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NavigationLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/link/link.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Logo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation/navigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navigation/navigation.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/platform-section/platform-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlatformSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text/text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/title/title.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/why-choose-envor-section/why-choose-envor-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WhyChooseEnvorSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/buttonLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonBigPlay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/buttonLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "buttonServices",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/textLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textPlatform",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/textLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "textWhyChooseEnver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/titleLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "titlePlatform",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/labels/titleLabels.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "titleWhyChoseEnver",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}